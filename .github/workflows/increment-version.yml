name: Increment Version

on:
  pull_request:
    types:
      - closed

jobs:
  increment-version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest" >> $GITHUB_ENV

      - name: Determine version increment
        id: determine_increment
        run: |
          LATEST_TAG="${{ env.latest_tag }}"
          LATEST_TAG="${LATEST_TAG#v}" # Remove 'v' prefix
          IFS='.' read -r major minor patch <<< "$LATEST_TAG"

          if [[ "${{ github.event.pull_request.head.ref }}" == feature/* ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ "${{ github.event.pull_request.head.ref }}" == hotfix/* ]]; then
            patch=$((patch + 1))
          elif [[ "${{ github.event.pull_request.head.ref }}" == release/* ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          fi

          echo "new_version=v$major.$minor.$patch" >> $GITHUB_ENV

      - name: Create and push new tag
        run: |
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Update build.gradle version
        run: |
          git checkout ${{ github.event.pull_request.base.ref }}
          sed -i "s/version = '.*'/version = '${{ env.new_version }}'/" build.gradle
          git add build.gradle
          git commit -m "Update version in build.gradle to ${{ env.new_version }}"
          git push origin ${{ github.event.pull_request.base.ref }}

      - name: Output new version
        run: echo "New version is ${{ env.new_version }}"
